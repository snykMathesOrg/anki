#separator:tab
#html:true
#guid column:1
#notetype column:2
#deck column:3
#tags column:6
o*eHm.`I]|	Basic	SnykAdvanced::Snyk::Product::CLI	Snyk CLI: Authenticate Snyk CLI with a Snyk account.	"<a href=""https://docs.snyk.io/snyk-cli/commands/auth""><code>snyk auth</code></a>"	
A.^nCerHlM	Basic	SnykAdvanced::Snyk::Product::CLI	Snyk CLI:&nbsp;: Test a project for open-source vulnerabilities and license issues.	"<a href=""https://docs.snyk.io/snyk-cli/commands/test""><code>snyk test</code></a>"	
"wW:pE#Vf9m"	Basic	SnykAdvanced::Snyk::Product::CLI	Snyk CLI: Snapshot and continuously monitor a project for open-source vulnerabilities and license issues.	"<a href=""https://docs.snyk.io/snyk-cli/commands/monitor""><code>snyk monitor</code></a>"	
g&pjHMhGa`	Basic	SnykAdvanced::Snyk::Product::CLI	Snyk CLI: These commands test and continuously monitor container images for vulnerabilities and generate an SBOM for a container image.	snyk container	
cqr2?c,7]D	Basic	SnykAdvanced::Snyk::Product::CLI	These commands find and report security issues in Infrastructure as Code files; detect, track, and alert on infrastructure drift and unmanaged resources; and create a .driftigore file.	snyk iac &lt;COMMAND&gt; [&lt;OPTIONS&gt;] [&lt;PATH&gt;]	
tz0&obdTb%	Basic	SnykAdvanced::Snyk::Product::CLI	Snyk CLI: command finds security issues using Static Code Analysis.	"<a href=""https://docs.snyk.io/snyk-cli/commands/code""><code>snyk code</code></a>"	
Ddqd@$yae9	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli: Produce an SBOM for a local software project in an ecosystem supported by Snyk.	"<a href=""https://docs.snyk.io/snyk-cli/commands/sbom""><code>snyk sbom</code></a>"	
F`RBV|5bF@	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli: Find Log4Shell vulnerability.	snyk log4shell	
s?}[;JxVXX	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli :Manage Snyk CLI configuration.	"<a href=""https://docs.snyk.io/snyk-cli/commands/config""><code>snyk config</code></a>"	
zRevL/K&s-	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli: Display the <code>.snyk</code> policy for a package.	"<a href=""https://docs.snyk.io/snyk-cli/commands/policy""><code>snyk policy</code></a>"	
CSqp>e%Ef&	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli: Modify the <code>.snyk</code> policy to ignore stated issues.	"<a href=""https://docs.snyk.io/snyk-cli/commands/ignore""><code>snyk ignore</code></a>"	
nD]$bhv/n]	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli env variables: Allows you to override the token that may be available in your Snyk configuration settings (<code>~/.config/configstore/snyk.json</code>). Use in a CI/CD environment	SNYK_TOKEN	
L?akuhwv;5	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli env variables: Allows you to override any key that is also available as a <code>snyk config</code> option	SNYK_CFG_&lt;KEY&gt;	
35MKN=NRK	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli env variables: For the <code>snyk container</code> commands, specify a username to use when connecting to a container registry. Note that using the <code>--username</code> flag overrides this value. This is ignored in favor of local Docker binary credentials when Docker is present.&nbsp;	SNYK_REGISTRY_USERNAME	
K4`y7Aa:!{	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli env variables: For the <code>snyk container</code> commands, specify a password to use when connecting to a container registry. Note that using the <code>--password</code> flag overrides this value. This is ignored in favor of local Docker binary credentials when Docker is present.	SNYK_REGISTRY_PASSWORD	
of)eGfZ7a;	Basic	SnykAdvanced::Snyk::Product::CLI	"snyk cli env variable: Sets the API host to use for Snyk requests. Useful for <a href=""https://app.gitbook.com/o/-M4tdxG8qotLgGZnLpFR/s/-MdwVZ6HOZriajCf5nXH/~/diff/~/changes/6358/more-info/data-residency-at-snyk#cli-and-ci-pipelines-urls"">regional hosting</a>, on-premise instances, or when using a proxy server. If set with the <code>http</code> protocol the CLI upgrades the requests to <code>https</code>, unless <code>SNYK_HTTP_PROTOCOL_UPGRADE</code> is set to <code>0</code>."	SNYK_API	
b:/GMF}W,W	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli env variable - If set to the value of <code>0</code>, API (and CLI) requests aimed at <code>http</code> URLs are not upgraded to <code>https</code>. If the protocol is not set, the default behavior is to upgrade these requests from <code>http</code> to <code>https</code>. This is useful, for example, for reverse proxies.	SNYK_HTTP_PROTOCOL_UPGRADE=0	
i|,%x6mnbz	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli env variable: Disables all Snyk CLI analytics.	SNYK_DISABLE_ANALYTICS=1	
j/xTkv&;+j	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli env variables: Specifies the OAuth token if required for verification.	SNYK_OAUTH_TOKEN=&lt;OAuth token&gt;	
B&np288;dr	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli env variable: When you use the Snyk CLI behind a HTTP proxy	<code>HTTP_PROXY</code> or <code>http_proxy</code>	
e>;IUtor~@	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli env variable: When you use the Snyk CLI behind a HTTPS proxy	<code>HTTPS_PROXY</code> or <code>https_proxy</code>	
q[(U2qz5?L	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli env - does HTTPS_PROXY need to be HTTPS?	no, The <code>https</code> in the <code>HTTPS_PROXY</code> means that requests using <code>https</code> protocol use this proxy. The proxy itself does not need to use <code>https</code>.	
qh*|C_eZB>	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli: To disable proxy authentication, specify the following command line parameter:	--proxy-noauth	
"EWU4<YpEm#"	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli - enable debug option&nbsp;	-d	
KxV+OqFG6A	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - specify manifest file or individual .NET project.	--file=package.json	
DESEthsfD9	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - inspect all manifest files	--all-projects	
I=/DF8(7[%	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - specify package-manager for manifest file	--package-manager=pip	
yZgbamVz+f	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - test optional dev dependencies (that won't be shipped to production) - off by default	--dev	
Qx*D6k@eO3	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli test - exit code for : success (scan completed), no vulnerabilities found:	zero	
L}3x4h.d&M	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli test - exit code for : action_needed (scan completed), vulnerabilities found	1	
pRS`Fc1x~z	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli test - exit code for : failure, try to re-run the command. Use <code>-d </code>to output the debug logs.	2	
sQk*.z^N_h	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli test - exit code for : failure, no supported projects detected	3	
c1FIDG{(vj	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - interrupt test when errors occur	--fail-fast	
"u|U:22#xm~"	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - use with --all-projects or --yarn-workspaces to indicate how many subdirectories to search	"<span style=""font-weight: 600;"">--detection-depth=&lt;DEPTH&gt;</span>"	
HF8{!18dzA	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - exclude name or names for file[s] and dir[s]	"<span style=""font-weight: 600;"">--exclude=&lt;NAME&gt;[,&lt;NAME&gt;]</span>"	
Cm$T_FPXUS	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk cli options - remove duplicate sub-dependencies on scan	"<code>--prune-repeated-subdependencies</code><span style=""font-weight: 600;"">, </span><code>-p</code>"	
sn[AD@}/oX	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test options - Print the dependency tree before sending it for analysis.	"<span style=""font-weight: 600;"">--print-deps</span>"	
xhx-M3tLW^	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - Set or override the remote URL for the repository that you would like to monitor.	"<span style=""font-weight: 600;"">--remote-repo-url=&lt;URL&gt;</span>"	
k|l:RH>1aQ	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - Specify the <code>&lt;ORG_ID&gt;</code> to run Snyk commands tied to a specific Snyk Organization. The <code>&lt;ORG_ID&gt;</code> influences some features availability and private test limits.	"<span style=""font-weight: 600;"">--org=&lt;ORG_ID&gt;</span>"	
B(_}pmKoUo	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - for c++ only, scan all files for known open source deps	"<span style=""font-weight: 600;"">--unmanaged</span>"	
EgUw2EC<-8	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - Ignore all set policies, the current policy in the <code>.snyk</code> file, Org level ignores, and the project policy on snyk.io.	"<span style=""font-weight: 600;"">--ignore-policy</span>"	
H.pSxhveX%	Basic	SnykAdvanced::Snyk::Product::CLI	Apply and use ignore rules from the Snyk policies in your dependencies; otherwise ignore rules in the dependencies are only shown as a suggestion.	"<span style=""font-weight: 600;"">--trust-policies</span>"	
w?I5ywp[]F	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - Display the dependency paths from the top level dependencies down to the vulnerable packages. Not supported with <code>--json-file-output</code>.	"<span style=""font-weight: 600;"">--show-vulnerable-paths=&lt;none|some|all&gt;</span>"	
CV]B^L4)~Q	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - Specify a custom Snyk project name.	"<span style=""font-weight: 600;"">--project-name=&lt;PROJECT_NAME&gt;</span>"	
b[}|Q9^q|,	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - Specify a reference that differentiates this project, for example, a branch name or version. Projects having the same reference can be grouped based on that reference. Supported for Snyk Open Source except for use with <code>--unmanaged</code>.	"<span style=""font-weight: 600;"">--target-reference=&lt;TARGET_REFERENCE&gt;</span>"	
C1K@9jeMdq	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - Manually pass a path to a <code>.snyk</code> policy file.	"<span style=""font-weight: 600;"">--policy-path=&lt;PATH_TO_POLICY_FILE&gt;</span>"	
Hm-.zf&n*[	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - Print results on the console as a JSON data structure.	"<span style=""font-weight: 600;"">--json</span>"	
ze$m4sEU,9	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - Save test output as a JSON data structure directly to the specified file, regardless of whether or not you use the <code>--json</code> option.	"<span style=""font-weight: 600;"">--json-file-output=&lt;OUTPUT_FILE_PATH&gt;</span>"	
EP~xWwNEhI	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - Return results in SARIF format.	"<span style=""font-weight: 600;"">--sarif</span>"	
l&ktGz|paF	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - Save test output in SARIF format directly to the &lt;OUTPUT_FILE_PATH&gt; file, regardless of whether or not you use the <code>--sarif</code> option.	"<span style=""font-weight: 600;"">--sarif-file-output=&lt;OUTPUT_FILE_PATH&gt;</span>"	
F{V:em?R`y	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - Report only vulnerabilities at the specified level or higher.	"<span style=""font-weight: 600; letter-spacing: -0.3px; white-space: pre-wrap;"">--severity-threshold=&lt;low|medium|high|critical&gt;</span>"	
L|K)4<QeBn	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option - Fail only when there are vulnerabilities that can be fixed.	"<span style=""font-weight: 600;"">--fail-on=&lt;all|upgradable|patchable&gt;</span>"	
jV0M1)iPL]	Basic	SnykAdvanced::Snyk::Product::CLI	what are 5 ways to install snyk CLI	standalone executable<br>homebrew (mac)<br>scoop (windows)<br>npm/yarn<br>docker image	
"P42D=#.XCz"	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli option : for scanning Maven aggregate projects, that is, projects that use modules and inheritance.	--maven-aggregate-project	
s/mmW(;@5;	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli option : To test individual JAR, WAR, and AAR files, use the following:	"<span style=""font-weight: 600;"">--scan-unmanaged </span>--file=&lt;JAR_FILE_NAME&gt;"	
N+~8vcfIQ^	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli option : Auto-detect Maven, JAR, WAR, and AAR files recursively from the current folder.&nbsp;	--scan-all-unmanaged	
LQ|na_jcP8	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli option: For Gradle multi project configurations, test a specific sub-project.	"<code>--sub-project=&lt;NAME&gt;</code><span style=""font-weight: 600;"">, </span><code>--gradle-sub-project=&lt;NAME&gt;</code>"	
f>2$dN7rBa	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli option: For multi project configurations, test all sub-projects.	"<span style=""font-weight: 600;"">--all-sub-projects</span>"	
uXEGU38;3b	Basic	SnykAdvanced::Snyk::Product::CLI	snyk test cli option: Resolve dependencies using only configuration(s) that match the specified Java regular expression.	"<span style=""font-weight: 600;"">--configuration-matching=&lt;CONFIGURATION_REGEX&gt;<br></span><br class=""Apple-interchange-newline"">Example:&nbsp;<code>^releaseRuntimeClasspath$</code>"	
jiy:SW<8`g	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option: Select certain values of configuration attributes to install and resolve dependencies.	"<span style=""font-weight: 600;"">--configuration-attributes=&lt;ATTRIBUTE&gt;[,&lt;ATTRIBUTE&gt;]..<br></span><br class=""Apple-interchange-newline"">Example:&nbsp;<code>buildtype:release,usage:java-runtime</code>"	
g^U`&L@m8B	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option: Use for projects that contain a Gradle initialization script.	"<span style=""font-weight: 600;"">--init-script=&lt;FILE&gt;</span>"	
vvwGp%S9W:	Basic	SnykAdvanced::Snyk::Product::CLI	"cli: snyk test option:<div>

When you are monitoring a .NET project using NuGet&nbsp;<code>PackageReference</code>&nbsp;uses the project name in&nbsp;<code>project.assets.json</code>&nbsp;if found.<span style=""font-weight: 600;""><br></span></div>"	"—<span style=""font-weight: 600;"">assets-project-name</span>"	
fBbc/Eu5uW	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option: Specify a custom path to the packages folder.	"<span style=""font-weight: 600;"">--packages-folder</span>=../location/to/"	
hZdf=>&WK`	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option: When monitoring a .NET project, use this option to add a custom prefix to the name of files inside a project along with any desired separators.	"<span style=""font-weight: 600;"">--project-name-prefix=&lt;PREFIX_STRING&gt;</span>"	
N~1f|_z-iZ	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option: Prevent testing out-of-sync lockfiles.	"<span style=""font-weight: 600;"">--strict-out-of-sync=true|false</span>"	
v%9x~/;9>w	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option: Detect and scan Yarn Workspaces only when a lockfile is in the root.	"<span style=""font-weight: 600;"">--yarn-workspaces</span>"	
Gz}|r(5txT	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test options: Indicate which specific Python commands to use based on the Python version.	"<span style=""font-weight: 600;"">--command=&lt;COMMAND&gt;<br><br></span>Example: <code>snyk test--command=python3</code>"	
p.+L/6w;Sc	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option: Skip packages that cannot be found in the environment, for example, private packages that cannot be accessed from the machine running the scan.	"<span style=""font-weight: 600;"">--skip-unresolved=true|false</span>"	
LWlS^*zrd>	Basic	SnykAdvanced::Snyk::Product::CLI	cli: snyk test option: Use this&nbsp;after the complete Snyk command to pass additional options (arguments, flags) that follow directly to the build tool, for example Gradle or Maven.	snyk &lt;command&gt; -- [&lt;context-specific_options&gt;]<br><br><div>Example: <code>snyk test -- --build-cache</code></div>	
ce{BA<&Y`1	Basic	SnykAdvanced::Snyk::Product::CLI	"snyk cli feedback: when should you run ""snyk wizard"""	this is legacy and deprecated, you should not run it	
C^[N)Fsm+7	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cli: command to convert json output to html	snyk-to-html	
QGvao>GmXT	Basic	SnykAdvanced::Snyk::Product::CLI	snyk cicd: what are 2 examples of cicd tools that rely on json-to-html	jenkins plugin, azure pipelines	
BQ7$$?2t2Q	Basic	SnykAdvanced::Snyk::Product::CLI	who makes snyk-filter?	snyk tech services	
q1SpYODf{(	Basic	SnykAdvanced::Snyk::Product::CLI	snky cli: what command line tool is used to create custom filters?	snyk-filter	
p$N09w7,&7	Basic	SnykAdvanced::Snyk::Product::CLI	what cli command creates ticket from snyk test output?	snyk-jira-sync-macos	
