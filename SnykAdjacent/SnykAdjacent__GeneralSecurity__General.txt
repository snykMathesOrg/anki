#separator:tab
#html:true
#guid column:1
#notetype column:2
#deck column:3
#tags column:7
CBWbm;}Ck_	Basic	SnykAdjacent::GeneralSecurity::General	White box testing provides ___ and examines ___	inputs, outputs		
J}K5,k$cS~	Basic	SnykAdjacent::GeneralSecurity::General	black box testing interaces with ____ and discovers _____ like a user or external attacker would	running applications , faults and vulnerabilities&nbsp;		
qLN$EiAV<[	Basic	SnykAdjacent::GeneralSecurity::General	grey box testing tests a system with ____ knowledge of its internals	partial		
x!saPy|pC$	Basic	SnykAdjacent::GeneralSecurity::General	what are 3 examples of grey box testing	integration testing, end-to-end testing, pen testing		
Bs?7ask):^	Basic	SnykAdjacent::GeneralSecurity::General	DAST interacts with running applications and discovering faults and vulnerabilities like a _____ or _____ would	user or external attacker		
eYY3`VMS&L	Basic	SnykAdjacent::GeneralSecurity::General	what are 5 types of white box testing?	unit, mutation, integration, white box pen, static code analysis		
L^TFzH@~vy	Basic	SnykAdjacent::GeneralSecurity::General	mutation testing is a type of ____&nbsp;	unit testing		
ckVRWuQx!{	Basic	SnykAdjacent::GeneralSecurity::General	unit testing tests are written as part of the application code, which test that ___ ___ is working as expected.	each component		
wT{oAI1Vl|	Basic	SnykAdjacent::GeneralSecurity::General	integration testing tests are specifically designed to check _____ _____ between points in a software system, or integrations with external systems	integration points		
xD]+Dg<{=)	Basic	SnykAdjacent::GeneralSecurity::General	white box pen testing is when an ethical hacker acts as a ____ ____ attempting to hack an application based on intimate knowledge of its code and environment	knowledgeable insider		
q|bLT<`G)@	Basic	SnykAdjacent::GeneralSecurity::General	____ ____ ____ is automatically identifying vulnerabilities or coding errors in static code, using predefined patterns or machine learning analysis.	static code analysis		
oR!I6p*e]U	Basic	SnykAdjacent::GeneralSecurity::General	what 5 outcomes does white box testing focus on?	security gaps and vulns, broken or poorly structured paths, expected output, loop testing, data flow testing		
J/{.18STU8	Basic	SnykAdjacent::GeneralSecurity::General	white box testing looks for security gaps and vulns - and checks to see if security best practices were applied when coding the application, and if the code is vulnerable to known ___ and _____	security threats, exploits		
ozRd4LQeJ?	Basic	SnykAdjacent::GeneralSecurity::General	white box testing looks for <b>broken or poorly structured paths</b> by&nbsp;identifying ___ ____ that is redundant, broken or inefficient.	conditional logic		
eb>Mv+-T>J	Basic	SnykAdjacent::GeneralSecurity::General	White Box Testing tests&nbsp;<b>Expected output by&nbsp;</b>executing all ____ ___ to a function to see if it always returns the expected result.	possible inputs		
EkQ=k2r}Ev	Basic	SnykAdjacent::GeneralSecurity::General	White Box Testing tests&nbsp;<b>Loop testing&nbsp;</b>by checking __ loops, ____&nbsp; loops and ____ loops for efficiency, conditional logic, and correct handling of local and global variables	single, concatenated and nested		
Ly{Z]oh/E]	Basic	SnykAdjacent::GeneralSecurity::General	White box testing handles data flow testing by tracking ____ and their ___ as they pass through the code to find variables that are not correctly initialized, declared but never used, or incorrectly manipulated	variables, values		
kkX>4DQM8[	Basic	SnykAdjacent::GeneralSecurity::General	What are 3 ways code coverage is measured?	statement coverage, branch coverage, path coverage		
k2OQO)k?bz	Basic	SnykAdjacent::GeneralSecurity::General	statement coverage is a _____ ___ ___&nbsp; technique that ensure all ___ ____ in the code are run and tested at least once.	white box testing, executable statements		
F-^>.-hVKA	Basic	SnykAdjacent::GeneralSecurity::General	statement coverage helps uncover _____ _____, ___ ____ , missing statements that are referenced by part of the code, and dead code from previous versions	unused statements, unused branches		
xtKU3.)[6f	Basic	SnykAdjacent::GeneralSecurity::General	Branch coverage maps the code into branches of ___ ___, and ensures that each and every branch is covered by ___ ____.&nbsp;	conditional logic, unit tests		
E*])[E$d[0	Basic	SnykAdjacent::GeneralSecurity::General	In a path coverage approach, the tester writer __ ___to execute as many as possible of the paths through the programâ€™s control flow. The objective is to identify paths that are ___, ___, or inefficient.	unit tests, broken, redundant		
zi7w5$TJ/&	Basic	SnykAdjacent::GeneralSecurity::General	Bytecode is&nbsp;an ____ ____ of computer code generated by a compiler	intermediate form		
f9,;byN3TN	Basic (SnykCollab / andrew.mathes@snyk.io)	SnykAdjacent::GeneralSecurity::General	"IaC acronym:&nbsp;<b><span style=""font-weight: 400;"">HCL</span></b>"	"<b><span style=""font-weight: 400;"">HashiCorp Configuration Language (terraform)</span></b>"	0d6d0868-c4ef-42e1-b80d-0087b088d82e	AnkiHub_Subdeck::SnykCollab::Acronyms
GXnvYIQ?*7	Basic	SnykAdjacent::GeneralSecurity::General	Networking Acronym: CIDR	<b>Classless Inter-Domain Routing</b>		
sx::mG@)TE	Basic (SnykCollab / andrew.mathes@snyk.io)	SnykAdjacent::GeneralSecurity::General	Security: measuring a security tool's false positives rate	Precision	f4ae506f-c3db-44d3-8402-305d71071315	AnkiHub_Subdeck::SnykCollab::Acronyms
l7GAp<AQ6O	Basic (SnykCollab / andrew.mathes@snyk.io)	SnykAdjacent::GeneralSecurity::General	Security: word measuring a security tool's percent of issues found out of total issues	recall	4c2fc7a2-48cc-4f3c-a73b-9050d08d21e1	AnkiHub_Subdeck::SnykCollab::Acronyms
lJc]X*]O^5	Basic	SnykAdjacent::GeneralSecurity::General	Security: Who is main vendor pushing OCSF?	Amazon		
qEeU^+,e?@	Basic	SnykAdjacent::GeneralSecurity::General	Security&nbsp;Acronym: OCSF was announced by AWS when?	2022		
L*rnd*!_yX	Basic (SnykCollab / andrew.mathes@snyk.io)	SnykAdjacent::GeneralSecurity::General	mutation testing checks the robustness and consistency of the code by defining tests, then making _____ _____&nbsp; to the code and seeing if the tests still pass.	&nbsp;small, random changes		
